___________________________________üî¥ 
introduction to synchronization [What is synchronization,
 problems without synchronization, advantages
 and disadvantages]
___________________________________

----------------------------------------------------------
//Example without synchronization
class BookTheaterSeat {
	int total_seats = 10;
	void bookSeat(int seats) {
		if (total_seats >= seats) {
			System.out.println(seats+" seats booked successfully");
			total_seats = total_seats - seats;
			System.out.println("Seats Left : " + total_seats);
		} else {
			System.out.println("Sorry seats cannot be booked...!!");
			System.out.println("Seats Left : " + total_seats);
		}
	}
}
class MovieBookApp extends Thread {
	static BookTheaterSeat b;
	int seats;
	public void run() {
		b.bookSeat(seats);
	}
	public static void main(String[] args) {
		b = new BookTheaterSeat();
		MovieBookApp brar = new  MovieBookApp();
		brar.seats = 7;
		brar.start();
		MovieBookApp singh = new  MovieBookApp();
		singh.seats = 6;
		singh.start();
	}
}

‡®á‡®∏ example ‡®¶‡©á ‡®µ‡®ø‡©±‡®ö ‡®π‡©ã ‡®∏‡®ï‡®¶‡®æ output ‡®∏‡®π‡©Ä ‡®Ü‡®ú‡©á ‡®π‡©ã ‡®∏‡®ï‡®¶‡®æ ‡®ó‡®≤‡®§ ‡®Ü‡®ú‡©á
 we cannot assume output‡•§ ‡®ï‡©ã‡®à guarantee ‡®®‡®π‡©Ä ‡®µ‡©Ä ‡®¶‡©ã‡®µ‡®æ‡®Ç 
 persons ‡®¶‡©Ä seat book ‡®π‡©ã‡®ä‡®ó‡©Ä ‡®ú‡®æ ‡®®‡®π‡©Ä‡•§ why bcoz ‡®π‡©ã ‡®∏‡®ï‡®¶‡®æ ‡®á‡©±‡®ï
 thread if condition ‡®¶‡©á ‡®µ‡®ø‡©±‡®ö ‡®ö‡®≤‡®æ ‡®ú‡®æ‡®µ‡©á ‡®¶‡©Ç‡®ú‡®æ else ‡®¶‡©á ‡®µ‡®ø‡©±‡®ö‡•§ 
 ‡®á‡®π ‡®µ‡©Ä ‡®π‡©ã ‡®∏‡®ï‡®¶‡®æ ‡®¶‡©ã‡®µ‡©á ‡®π‡©Ä if ‡®¶‡©á ‡®µ‡®ø‡©±‡®ö ‡®ö‡®≤‡©á ‡®ú‡®æ‡®£‡•§ why bcoz ‡®¶‡©ã‡®µ‡©á thread
 same resource ‡®§‡©á ‡®á‡©±‡®ï ‡®∏‡®æ‡®• execute ‡®π‡©ã ‡®∞‡®π‡©á ‡®Æ‡®§‡®≤‡®¨ ‡®¶‡©ã‡®µ‡©á‡®Ç ‡®®‡®æ‡®≤ ‡®®‡®æ‡®≤
  (parallel execute) ‡®π‡©ã ‡®∞‡®π‡©á ‡®π‡©à ‡•§ 
  we cannot control thread execution.

‚ö´ without synchronization
‡®â‡©±‡®™‡®∞ ‡®µ‡®æ‡®≤‡©á program ‡®¶‡©á ‡®µ‡®ø‡©±‡®ö constant output ‡®®‡®π‡©Ä provide ‡®ï‡®∞
  ‡®™‡®æ ‡®∞‡®ø‡®π‡®æ program‡•§‡®ú‡©á output ‡®π‡©Ä ‡®ó‡®≤‡®§ ‡®π‡©à ‡®§‡®æ‡®Ç ‡®Ü‡®™‡®£‡©Ä 
 proper application ‡®π‡©Ä ‡®ó‡®≤‡®§ ‡®π‡©ã ‡®ó‡®à‡•§
Real world example: banking apps ‡®¶‡©á ‡®µ‡®ø‡©±‡®ö ‡®Æ‡©à ‡®ï‡©ã‡®à
 transaction ‡®ï‡®∞ ‡®∞‡®ø‡®π‡®æ(net-banking ‡®¶‡©á through),
  ‡®§‡©á ‡®ï‡©ã‡®à ‡®¶‡©Ç‡®ú‡®æ person ‡®ú‡®ø‡®∏ ‡®ï‡©ã‡®≤ ‡®Æ‡©á‡®∞‡®æ atm ‡®π‡©à ‡®â‡®π ‡®Æ‡©á‡®∞‡©á
 atm through credit ‡®ï‡®∞ ‡®∞‡®ø‡®π‡®æ‡•§
 ‡®á‡®∏ case ‡®¶‡©á ‡®µ‡®ø‡©±‡®ö money in consistant ‡®π‡©ã ‡®∏‡®ï‡®¶‡®æ ‡®π‡©à‡•§
‡®á‡®∏ (like banking apps) ‡®Ü‡®™‡®æ ‡®®‡©Ç‡©∞ proper ‡®ß‡®ø‡®Ü‡®® ‡®∞‡©±‡®ñ‡®£‡®æ ‡®™‡©à‡®Ç‡®¶‡®æ ‡®µ‡©Ä 
 ‡®Ö‡®™‡®£‡®æ data inconsistent ‡®®‡®æ ‡®π‡©ã‡®µ‡©á‡®Ç output constant ‡®π‡©ã‡®µ‡©á‡•§ 
 ‡®ú‡®¶‡©ã ‡®Ü‡®™‡®æ ‡®á‡®∏ ‡®§‡®∞‡©ç‡®π‡®æ‡®Ç ‡®¶‡©á apps ‡®¶‡©á ‡®µ‡®ø‡©±‡®ö thread ‡®¶‡®æ use ‡®ï‡®∞‡®¶‡©á ‡®π‡®æ‡®Ç ‡®§‡®æ‡®Ç 
 data inconsistent ‡®¶‡©Ä problem ‡®Ü ‡®∏‡®ï‡®¶‡©Ä ‡®π‡©à
 ‡®á‡®∏ ‡®≤‡®à synchronization ‡®¶‡®æ concept ‡®Ü‡®á‡®Ü‡•§

___________________________________
‚ö´ Defination: synchronization is the process by 
 which we control the accessibility of multiple-thread 
 of a particular resource.
‚ö´ Problem which can occur without synchronization:-
1)Data Inconsistancy.
2) Thread interference( multiple threads ‡®Ü‡®™‡®∏ ‡®¶‡©á ‡®µ‡®ø‡©±‡®ö 
 interfare ‡®ï‡®∞ ‡®∏‡®ï‡®¶‡©á ‡®π‡©à ‡®ú‡®ø‡®∏‡®¶‡©á ‡®®‡®æ‡®≤ deadlock problem ‡®µ‡©Ä occur ‡®π‡©ã ‡®∏‡®ï‡®¶‡©Ä ‡®π‡©à)
‚ö´ Advantages of synchronization:-
1)No data inconsistancy problem.
2)No thread interfarence.
‚ö´ Disadvantages of synchronization:- 
1) Increase the waiting time period of threads. ‡®Æ‡®§‡®≤‡®¨
 (‡®Ü‡®™‡®£‡©á ‡®á‡®∏ ‡®µ‡®æ‡®≤‡©á app ‡®¶‡©á ‡®µ‡®ø‡©±‡®ö) ‡®ú‡®¶‡©ã number of users increase ‡®π‡©ã‡®£‡®ó‡©á
 ‡®§‡®æ‡®Ç thread ‡®á‡©±‡®ï ‡®á‡©±‡®ï ‡®ï‡®∞‡®ï‡©á resource ‡®®‡©Ç‡©∞ use ‡®ï‡®∞‡®£‡®ó‡©á ‡®¨‡®æ‡®ï‡©Ä thread 
 waiting time period ‡®¶‡©á ‡®µ‡®ø‡©±‡®ö ‡®ú‡®æ‡®£‡®ó‡©á‡•§ ‡®á‡®∏ ‡®®‡®æ‡®≤ application ‡®¶‡©Ä 
  performance decrease ‡®π‡©Å‡©∞‡®¶‡©Ä ‡®ú‡®æ‡®ä‡®ó‡©Ä‡•§
2) Create performance problems.
‚ö´ Performance ‡®¶‡©Ä disadvantages ‡®®‡©Ç‡©∞ overcome ‡®ï‡®∞‡®® ‡®≤‡®à java
 ‡®®‡©á ‡®á‡©±‡®ï package creae ‡®ï‡®∞ ‡®¶‡®ø‡©±‡®§‡®æ java.util.concurrent‡•§
 ‡®á‡®∏ ‡®¶‡©á ‡®®‡®æ‡®≤ ‡®Ü‡®™‡®æ synchronization acchive ‡®ï‡®∞ ‡®∏‡®ï‡®¶‡©á ‡®π‡®æ‡®Ç without
 thread ‡®®‡©Ç‡©∞ wait ‡®ï‡®∞‡®æ‡®è‡•§
----------------------------------------------------------
‚ö´ Types of synchronization

Two types of synchronization.
(1) Process synchronization(not present in java multithreading)
(2) Thread synchronization
Thread Synchronization ‡®¶‡©á ‡®Ö‡©±‡®ó‡©á ‡®µ‡©Ä 2 types ‡®π‡©à‡•§
(1) Mutual exclusive
(2) Cooperation(inter thread communication in java)
‚ö´Mutual exclusive(can be achieved by 3 ways)
1)By "synchronized method"
2)By "synchronized block"
3)By "static synchronization"
‚ö´ Cooperation(can be achieved by following methods of Object class)
1)wait();
2)notify();
3)notifyAll();
----------------------------------------------------------
___________________________________

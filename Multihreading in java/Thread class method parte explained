part 2

___________________________________
üî¥Lecture 12
----------------------------------------------------------
‚ö´ yield method();
public static native void yield(){}
which stop the current executing thread & give a chance 
 to other threads for execution.
‡®ú‡®ø‡®π‡©ú‡®æ current running thread ‡®π‡©à(‡®ú‡©ã run ‡®π‡©ã ‡®∞‡®ø‡®π‡®æ) ‡®â‡®∏‡®®‡©Ç‡©∞ stop ‡®ï‡®∞‡®¶‡©Ç 
 ‡®§‡©á ‡®¨‡®æ‡®ï‡©Ä ‡®¶‡©á thread ‡®ú‡®ø‡©∞‡®®‡®æ ‡®¶‡©Ä priority same ‡®π‡©à ‡®ú‡®æ high ‡®π‡©à ‡®â‡®π‡®®‡®æ ‡®®‡©Ç‡©∞ 
 ‡®á‡®π permission ‡®¶‡©á ‡®¶‡®ø‡®â‡®ó‡®æ ‡®µ‡©Ä ‡®§‡©Å‡®∏‡©Ä‡®Ç execute ‡®π‡©ã ‡®ú‡®æ‡®ì‡•§
----------------------------------------------------------
for example: ‡®Ü‡®™‡®æ ‡®ï‡®ø‡®∏‡©á shopping mall ‡®ó‡®è ‡®Ü‡®™‡®æ ‡®¨‡®π‡©Å‡®§ shopping ‡®ï‡©Ä‡®§‡©Ä, 
 ‡®´‡®ø‡®∞ ‡®Ü‡®™‡®æ billing counter ‡®§‡©á bill ‡®≤‡©à‡®ï‡©á ‡®â‡®∏‡®®‡©Ç‡©∞ ‡®™‡©à‡®∏‡©á ‡®¶‡©á‡®£‡©á ‡®π‡©à ‡®§‡©á 
 ‡®Ü‡®™‡®£‡©á ‡®ï‡©ã‡®≤ ‡®∏‡®Æ‡®æ‡®£ ‡®¨‡®π‡©Å‡®§ ‡®π‡©à ‡®§‡©á bill ‡®ï‡©±‡®ü‡®£ ‡®¶‡©á ‡®µ‡®ø‡©±‡®ö 5-10 minute ‡®≤‡©±‡®ó‡®£ ‡®ó‡©á‡•§
  ‡®¶‡©Ç‡®ú‡©á ‡®™‡®æ‡®∏‡©á ‡®á‡©±‡®ï ‡®π‡©ã‡®∞ ‡®¨‡©∞‡®¶‡®æ ‡®â‡®π ‡®∏‡®ø‡®∞‡®´‡®º ‡®á‡©±‡®ï ‡®π‡©Ä ‡®∏‡®Æ‡®æ‡®£ ‡®≤‡©à‡®ï‡©á ‡®Ü‡®á‡®Ü ‡®§‡©á ‡®â‡®∏‡®¶‡©á bill ‡®ï‡©±‡®ü‡®£ 
 ‡®≤‡®à ‡®∏‡®ø‡®∞‡®´‡®º 10-20 seconds ‡®≤‡©±‡®ó‡®£ ‡®ó‡©á‡•§ ‡®á‡®∏ example ‡®¶‡©á ‡®µ‡®ø‡©±‡®ö ‡®™‡®π‡®ø‡®≤‡®æ 
 shopping mall ‡®µ‡®æ‡®≤‡®æ person2(‡®ò‡©±‡®ü ‡®∏‡®Æ‡®æ‡®£ ‡®µ‡®æ‡®≤‡®æ) ‡®¶‡©Ä billing ‡®ï‡®∞‡®¶‡©Ç‡•§
----------------------------------------------------------
‚ö´ internal working
 in java 5: yield method internally sleep method ‡®¶‡®æ ‡®π‡©Ä use ‡®ï‡®∞‡®¶‡®æ ‡®∏‡©Ä‡•§
in java 6: thread hint ‡®¶‡®ø‡©∞‡®¶‡®æ‡®Ç thread scheduler ‡®®‡©Ç‡©∞ ‡®µ‡©Ä 22 ‡®Æ‡©à stop ‡®π‡©ã‡®£‡®æ ‡®ö‡®æ‡®π‡©Å‡©∞‡®¶‡®æ, but internally ‡®á‡®π depend ‡®ï‡®∞‡®¶‡®æ thread scheduler ‡®§‡©á ‡®µ‡©Ä ‡®â‡®π thread ‡®¶‡©Ä hint accept ‡®ï‡®∞‡©á ‡®ú‡®æ‡®Ç ‡®´‡®º‡®ø‡®∞ ignore ‡®ï‡®∞‡®¶‡©á‡•§
----------------------------------------------------------


___________________________________
üî¥Lecture 13
----------------------------------------------------------
‚ö´ join method();
if a thread wants to wait for another thread to 
 complete its task, then we should use join() method.
we use join method ‡®ú‡®¶‡©ã ‡®Æ‡©à ‡®ö‡®æ‡®π‡©Å‡©∞‡®¶‡®æ ‡®µ‡©Ä ‡®á‡©±‡®ï thread stop ‡®π‡©ã ‡®ú‡®æ‡®µ‡©á ‡®§‡©á ‡®â‡®π
 ‡®¶‡©Ç‡®ú‡©á thread ‡®¶‡®æ wait ‡®ï‡®∞‡©á‡®ó‡®æ ‡®µ‡©Ä ‡®ú‡®¶‡©ã ‡®µ‡©Ä ‡®¶‡©Ç‡®ú‡®æ thread ‡®Ü‡®µ‡®¶‡®æ task ‡®®‡©Ç‡©∞ 
 complete ‡®ï‡®∞‡©Ç‡®ó‡®æ ‡®Æ‡©à(‡®ú‡®ø‡®π‡©ú‡®æ thread wait ‡®ï‡®∞ ‡®∞‡®ø‡®π‡®æ ‡®∏‡©Ä) 
 ‡®â‡®∏‡®®‡©Ç‡©∞(‡®ú‡©ã ‡®¶‡©Ç‡®ú‡®æ thread ‡®Ü‡®µ‡®¶‡®æ task complete ‡®ï‡®∞‡®ï‡©á ‡®Ü‡®á‡®Ü) join ‡®ï‡®∞ ‡®≤‡®ä‡®ó‡®æ‡•§
----------------------------------------------------------
‚ö´join ‡®¶‡©á ‡®≤‡®à 3 overload methods ‡®¨‡®£‡®æ‡®è ‡®ó‡®è ‡®π‡©à
(same name ‡®¶‡©á method within same class with different perameters)‡•§
(1) public final void join () throws InterruptedException{}
(2) public final synchronized void join
 (long milliseconds)throws InterruptedException{}
(3) public final synchronized void join
 (long milliseconds, int nanoseconds)throws InterruptedException{}




___________________________________
üî¥Lecture 14
----------------------------------------------------------
‚ö´ Difference between sleep yield & join method: 
https://youtu.be/6AnydGOob7Q
----------------------------------------------------------


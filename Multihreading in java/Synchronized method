___________________________________
üî¥Synchronized method 
___________________________________
Synchronization ‡®Ü‡®™‡®æ synchronized keyword ‡®¶‡©á through achive ‡®ï‡®∞‡®¶‡©á ‡®π‡®æ‡®Ç‡•§
‡®ï‡®ø‡®∏‡©á ‡®µ‡©Ä method ‡®Ö‡©±‡®ó‡©á synchronized keyword ‡®¶‡®æ use ‡®ï‡®∞‡®¶‡©á ‡®π‡®æ ‡®§‡®æ‡®Ç
 ‡®â‡®π method synchronized ‡®π‡©ã ‡®ú‡®æ‡®ä‡®ó‡®æ‡•§ ‡®§‡©á ‡®™‡®π‡®ø‡®≤‡®æ ‡®µ‡®æ‡®≤‡®æ program ‡®¶‡©á ‡®µ‡®ø‡©±‡®ö 
 ‡®ú‡©ã method ‡®∏‡©Ä (bookSeat ‡®ú‡®ø‡®∏‡®®‡©Ç‡©∞ ‡®Ü‡®™‡®æ resource ‡®µ‡©Ä ‡®Ü‡®ñ‡®ø‡®Ü ‡®∏‡©Ä) ‡®â‡®∏ ‡®Ö‡©±‡®ó‡©á
  synchronized keyword ‡®¶‡®æ use ‡®ï‡®∞‡®ï‡©á ‡®â‡®π error fix ‡®π‡©ã ‡®ú‡®æ‡®ä‡®ó‡©Ä‡•§ but how
----------------------------------------------------------
‚ö´ backend working of synchronized.
‡®Ü‡®™‡®æ BookTheaterSeat ‡®¶‡®æ object create ‡®ï‡©Ä‡®§‡®æ ‡®∏‡©Ä‡•§(‡®ú‡©ã ‡®∏‡©Ä b)‡•§
1) java ‡®¶‡©á ‡®Ö‡©∞‡®¶‡®∞ ‡®π‡®∞‡©á‡®ï object ‡®¶‡®æ unique lock ‡®π‡©Å‡©∞‡®¶‡®æ‡•§ 
(2)‡®π‡®∞‡©á‡®ï Object ‡®¶‡©á ‡®Ö‡©∞‡®¶‡®∞ 2 area ‡®π‡©Å‡©∞‡®¶‡©á‡•§
(1) non-synchronized area
(2) synchronized area(‡®á‡®∏‡®¶‡©á through ‡®Ü‡®™‡®æ synchronized ‡®ö‡©Ä‡®ú‡®º‡®æ‡®Ç access ‡®ï‡®∞
 ‡®∏‡®ï‡®¶‡©á ‡®π‡®æ, ‡®ö‡®æ‡®π‡©á ‡®â‡®π synchronized method ‡®π‡©à ‡®ú‡®æ‡®Ç synchronized block ‡®π‡©à)
‡®Ü‡®™‡®æ ‡®â‡®∏(b)object ‡®¶‡©á through bookSeat method call ‡®ï‡®∞ ‡®∞‡®π‡©á ‡®π‡®æ‡®Ç ‡®§‡©á 
 ‡®â‡®π (bookSeat) method synchronized type ‡®¶‡®æ ‡®π‡©à ‡®á‡®π synchronized 
 area ‡®¶‡©á ‡®µ‡®ø‡©±‡®ö ‡®Ö‡®ú‡®æ‡®µ‡©á‡®ó‡®æ‡•§ ‡®Ü‡®™‡®æ ‡®â‡©±‡®•‡©á 2 thread create ‡®ï‡©Ä‡®§‡©á ‡®∏‡©Ä
 (brar 7seat book ‡®ï‡®∞‡®¶‡®æ ,singh 6 seat)‡•§ ‡®´‡®ø‡®∞ brar.start();
 b.bookSeat();  ‡®®‡©Ç‡©∞ object(b) ‡®¶‡©á through call ‡®ï‡®∞ ‡®∞‡®ø‡®π‡®æ ‡®§‡©á ‡®â‡®π 
(bookSeat synchronized method) ‡®π‡©à‡•§ ‡®π‡®∞‡©á‡®ï object ‡®¶‡®æ ‡®Ö‡©±‡®° lock ‡®π‡©Å‡©∞‡®¶‡®æ‡•§
 ‡®ú‡®¶‡©ã thread method(bookSeat) ‡®®‡©Ç‡©∞ access ‡®ï‡®∞‡©Ç object ‡®¶‡©á through ‡®§‡®æ‡®Ç
 ‡®â‡®∏ ‡®µ‡®æ‡®≤‡©á thread ‡®®‡©Ç‡©∞ ‡®â‡®∏ object ‡®¶‡®æ lock acquire ‡®ï‡®∞‡®®‡®æ ‡®™‡®ä‡®ó‡®æ
(synchronized area ‡®¶‡©á ‡®µ‡®ø‡©±‡®ö ‡®ï‡©Å‡©±‡®ù ‡®µ‡©Ä access ‡®ï‡®∞‡®® ‡®≤‡®à thread ‡®®‡©Ç‡©∞
 ‡®â‡®∏‡®¶‡®æ(object ‡®¶‡®æ) lock acquire ‡®ï‡®∞‡®®‡®æ ‡®™‡®ä‡®ó‡®æ)‡•§ 
 ‡®ú‡®¶‡©ã ‡®¶‡©Ç‡®ú‡®æ thread ‡®Ü‡®ä‡®ó‡®æ ‡®ì‡®¶‡©ã ‡®â‡®∏ thread ‡®®‡©Ç‡©∞ wait ‡®ï‡®∞‡®®‡®æ ‡®™‡®ä‡®ó‡®æ
 (synchronized area access ‡®ï‡®∞‡®® ‡®≤‡®à) 
 bcoz ‡®¶‡©Ç‡®ú‡©á thread (thread 1) ‡®®‡©á already (object ‡®¶‡®æ lock) acquire
 ‡®ï‡©Ä‡®§‡®æ ‡®π‡©ã‡®á‡®Ü ‡•§ ‡®á‡®∏ ‡®≤‡®à ‡®¶‡©Ç‡®ú‡®æ thread wait ‡®ï‡®∞‡©Ç‡®ó‡®æ(‡®µ‡©Ä ‡®ï‡®¶‡©ã ‡®á‡®π(object ‡®¶‡®æ) lock) 
 free ‡®π‡©ã‡®è‡®ó‡®æ ‡®§‡©á ‡®Æ‡©à(‡®¶‡©Ç‡®ú‡®æ thread) ‡®á‡®∏ lock ‡®®‡©Ç‡©∞ acquire ‡®ï‡®∞‡©Ç‡®ó‡®æ‡•§ 
 ‡®ú‡®¶‡©ã ‡®™‡®π‡®ø‡®≤‡®æ thread ‡®Ü‡®µ‡®¶‡®æ (‡®â‡®π bookSeat ‡®µ‡®æ‡®≤‡®æ synchronized
 method execute ‡®ï‡®∞ ‡®≤‡®ä‡®ó‡®æ) ‡®ì‡®¶‡©ã ‡®â‡®π object ‡®¶‡®æ lock drop ‡®ï‡®∞‡®¶‡©Ç ‡®§‡©á ‡®â‡®π
 thread dead state ‡®¶‡©á ‡®µ‡®ø‡©±‡®ö ‡®ö‡®≤‡®æ ‡®ú‡®æ‡®â‡®ó‡®æ , ‡®§‡©á ‡®ì‡®¶‡©ã (‡®ú‡®¶‡©ã‡®Ç ‡®™‡®π‡®ø‡®≤‡®æ thread dead ‡®π‡©ã‡®ú‡©Ç)
 ‡®¶‡©Ç‡®ú‡®æ thread ‡®â‡®∏ object(b) ‡®¶‡®æ lock acquire ‡®ï‡®∞ ‡®≤‡®ä‡®ó‡®æ ‡®§‡©á ‡®π‡©Å‡®£ ‡®â‡®π
 bookSeat ‡®µ‡®æ‡®≤‡©á method ‡®®‡©Ç‡©∞ execute ‡®ï‡®∞‡®®‡®æ start ‡®ï‡®∞‡®¶‡©Ç‡•§

‚ö´Overview: ‡®ï‡©å‡®à ‡®µ‡©Ä thread ‡®™‡®π‡®ø‡®≤‡®æ lock acquire ‡®ï‡®∞ ‡®∏‡®ï‡®¶‡®æ ‡®™‡®∞ ‡®ï‡®∞‡©Ç‡®ó‡®æ ‡®á‡©±‡®ï‡•§
 ‡®ï‡©ã‡®à ‡®µ‡©Ä thread ‡®ú‡®¶‡©ã ‡®á‡®∏ synchronized area ‡®¶‡©á through 
 method(synchronized method) ‡®®‡©Ç‡©∞ access ‡®ï‡®∞‡©Ç‡®ó‡®æ ‡®§‡©á ‡®ú‡®¶‡©ã‡®Ç ‡®â‡®∏ thread 
 ‡®®‡©á lock acquire ‡®ï‡®∞ ‡®≤‡®ø‡®Ü ‡®§‡®æ‡®Ç ‡®ï‡©å‡®à ‡®µ‡©Ä ‡®¶‡©Ç‡®ú‡®æ thread ‡®â‡®∏ method ‡®®‡©Ç‡©∞
 access ‡®®‡®π‡©Ä ‡®ï‡®∞ ‡®™‡®æ‡®â‡®ó‡®æ ‡®ú‡®¶‡©ã ‡®§‡©±‡®ï ‡®â‡®π ‡®¶‡©Ç‡®ú‡®æ method lock ‡®®‡®π‡©Ä ‡®≤‡©à ‡®≤‡©à‡®Ç‡®¶‡®æ‡®Ç‡•§ 
 ‡®Ü‡®™‡®æ ‡®á‡®π ‡®µ‡©Ä ‡®ï‡®π‡®ø ‡®∏‡©±‡®ï‡®¶‡©á ‡®π‡®æ ‡®µ‡©Ä ‡®ú‡®¶‡©ã synchronized method execute ‡®π‡©ã ‡®ú‡®æ‡®Ç‡®¶‡®æ
 ‡®â‡®¶‡©ã‡®Ç ‡®â‡®π lock release (‡®õ‡©±‡®°) ‡®ï‡®∞‡®¶‡©Ç‡•§ ‡®á‡®∏ ‡®§‡®∞‡©Ä‡®ï‡©á ‡®®‡®æ‡®≤ data inconsistancy
 ‡®¶‡©Ä problem solve ‡®ï‡©Ä‡®§‡©Ä ‡®ú‡®æ ‡®∏‡®ï‡®¶‡©Ä ‡®π‡©à‡•§
----------------------------------------------------------

___________________________________
